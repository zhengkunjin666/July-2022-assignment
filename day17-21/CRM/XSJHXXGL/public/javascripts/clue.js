const PAGE={init:function(){this.bind()},bind:function(){window.addEventListener("load",this.highlight),window.addEventListener("load",this.parseTime);var e=document.getElementById("table");this.onEventlister(e,"click","show-icon",this.filterShow);let t=document.getElementById("filter-list"),n=(t.addEventListener("mouseleave",this.filterHidden),this.onEventlister(t,"click","filter-item",this.handlershow),document.getElementById("filter-btn"));n.addEventListener("click",this.handlerFilter),this.onEventlister(e,"click","clue-orderby",this.handlerOrderby),this.onEventlister(e,"click","track",this.recordShow)},onEventlister:function(e,t,n,i){e.addEventListener(t,function(e){0<=e.target.className.indexOf(n)&&i(e)})},highlight:function(){let t=window.location.href,n=document.getElementsByClassName("nav-item");for(let e=0;e<n.length;e++){var i=n[e].dataset.id;-1!=t.indexOf(i)&&(n[e].className="nav-item active")}},parseTime:function(){let t=document.getElementsByClassName("time");for(let e=0;e<t.length;e++){dateTime=t[e].innerText;var n=PAGE.formatDate(dateTime);t[e].innerText=n}},formatDate:function(e,t="YY/MM/DD hh:mm:ss"){var e=new Date(e),n=e.getFullYear(),i=e.getMonth()+1,l=e.getDate(),r=e.getHours(),a=e.getMinutes(),e=e.getSeconds(),d=new Array(10).fill(0).map((e,t)=>"0"+t);return t.replace(/YY/g,n).replace(/MM/g,d[i]||i).replace(/DD/g,d[l]||l).replace(/hh/g,d[r]||r).replace(/mm/g,d[a]||a).replace(/ss/g,d[e]||e)},filterShow:function(){let e=document.getElementById("filter-list");e.style.display="block"},filterHidden:function(){let e=document.getElementById("filter-list");e.style.display="none"},handlershow:function(e){var t=e.target.dataset.id;let n=document.getElementById("show-text");e=e.target.innerText;n.dataset.id=t,n.innerText=e},handlerFilter:function(){var e=document.getElementById("show-text").innerText,t=document.getElementById("filter-input").value.trim(),n=document.getElementById("show-text").dataset.id;url=`/admin/clue/?showText=${e}&dataId=${n}&filterInput=`+t,location.assign(url)},handlerOrderby:function(e){var t=e.target.parentNode.dataset.column,n=e.target.dataset.order,e=e.target.innerText;url=`/admin/clue/?column=${t}&order=${n}&orderText=`+e,location.assign(url)},recordShow:function(e){e=e.target.dataset.id;location.assign("/admin/clue/record?id="+e)}};PAGE.init();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,